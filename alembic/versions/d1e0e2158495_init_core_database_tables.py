"""init core database tables

Revision ID: d1e0e2158495
Revises: 
Create Date: 2024-02-25 11:53:53.340644

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd1e0e2158495'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pipeline',
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('load_timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('uid', name=op.f('pk_pipeline')),
    sa.UniqueConstraint('name', name=op.f('uq_pipeline_name'))
    )
    op.create_table('task_type',
    sa.Column('name', sa.Enum('DOWNLOAD_VIDEO', 'EXTRACT_VIDEO_DESCRIPTION', 'GENERATE_IMAGE_FROM_TEXT', name='tasktypes'), nullable=False),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('load_timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('uid', name=op.f('pk_task_type')),
    sa.UniqueConstraint('name', name=op.f('uq_task_type_name'))
    )
    op.create_table('pipeline_execution',
    sa.Column('pipeline_uid', sa.UUID(), nullable=False),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('load_timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pipeline_uid'], ['pipeline.uid'], name=op.f('fk_pipeline_execution_pipeline_uid_pipeline')),
    sa.PrimaryKeyConstraint('uid', name=op.f('pk_pipeline_execution'))
    )
    op.create_table('pipeline_step_template',
    sa.Column('pipeline_uid', sa.UUID(), nullable=False),
    sa.Column('previous_task_type_uid', sa.UUID(), nullable=True),
    sa.Column('current_task_type_uid', sa.UUID(), nullable=False),
    sa.Column('load_timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['current_task_type_uid'], ['task_type.uid'], name=op.f('fk_pipeline_step_template_current_task_type_uid_task_type')),
    sa.ForeignKeyConstraint(['pipeline_uid'], ['pipeline.uid'], name=op.f('fk_pipeline_step_template_pipeline_uid_pipeline')),
    sa.ForeignKeyConstraint(['previous_task_type_uid'], ['task_type.uid'], name=op.f('fk_pipeline_step_template_previous_task_type_uid_task_type')),
    sa.PrimaryKeyConstraint('pipeline_uid', 'current_task_type_uid', name=op.f('pk_pipeline_step_template'))
    )
    op.create_table('task',
    sa.Column('type_uid', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('CREATED', 'QUEUED', 'IN_WORK', 'FINISHED', 'ERROR', name='taskstatus'), nullable=False),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('load_timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['type_uid'], ['task_type.uid'], name=op.f('fk_task_type_uid_task_type')),
    sa.PrimaryKeyConstraint('uid', name=op.f('pk_task'))
    )
    op.create_table('pipeline_step',
    sa.Column('pipeline_execution_uid', sa.UUID(), nullable=False),
    sa.Column('previous_task_uid', sa.UUID(), nullable=True),
    sa.Column('current_task_uid', sa.UUID(), nullable=False),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('load_timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['current_task_uid'], ['pipeline_execution.uid'], name=op.f('fk_pipeline_step_current_task_uid_pipeline_execution')),
    sa.ForeignKeyConstraint(['pipeline_execution_uid'], ['pipeline_execution.uid'], name=op.f('fk_pipeline_step_pipeline_execution_uid_pipeline_execution')),
    sa.ForeignKeyConstraint(['previous_task_uid'], ['pipeline_execution.uid'], name=op.f('fk_pipeline_step_previous_task_uid_pipeline_execution')),
    sa.PrimaryKeyConstraint('uid', name=op.f('pk_pipeline_step'))
    )
    op.create_table('task_status_log',
    sa.Column('task_uid', sa.UUID(), nullable=False),
    sa.Column('created_timestamp', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('CREATED', 'QUEUED', 'IN_WORK', 'FINISHED', 'ERROR', name='taskstatus'), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('load_timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_uid'], ['task.uid'], name=op.f('fk_task_status_log_task_uid_task')),
    sa.PrimaryKeyConstraint('task_uid', 'created_timestamp', name=op.f('pk_task_status_log'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_status_log')
    op.drop_table('pipeline_step')
    op.drop_table('task')
    op.drop_table('pipeline_step_template')
    op.drop_table('pipeline_execution')
    op.drop_table('task_type')
    op.drop_table('pipeline')
    # ### end Alembic commands ###
